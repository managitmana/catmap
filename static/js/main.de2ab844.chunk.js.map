{"version":3,"sources":["App/toGeoJson.ts","App/setCluster.ts","App/Links.tsx","App/Shop.tsx","App/distance-label.ts","App/Map.tsx","App/Home.tsx","App/List.tsx","App/AboutUs.tsx","App/Category.tsx","App/Images.tsx","App/Tabbar.tsx","lib/zen2han.ts","lib/table2json.ts","App.tsx","Qrcode.tsx","App/Share.tsx","About.tsx","Container.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["toGeoJson","data","geojson","type","features","id","item","feature","geometry","coordinates","Number","properties","_id","i","Object","keys","length","key","push","setCluster","map","addLayer","source","filter","paint","layout","on","e","queryRenderedFeatures","point","layers","clusterId","cluster_id","getSource","getClusterExpansionZoom","err","zoom","easeTo","center","getCanvas","style","cursor","noop","stopPropagation","Content","props","className","href","onClick","size","mapNode","React","useRef","useState","setMap","shop","clickHandler","close","current","remove","useEffect","nextMap","window","geolonia","Map","container","interactive","text","distanceTipText","distance","isNaN","Math","round","makeDistanceLabelText","category","content","color","to","margin","src","alt","width","split","line","result","undefined","ref","height","marginTop","CSS","position","hidePoiLayers","hideLayers","layerId","setLayoutProperty","parseHash","url","qstr","location","hash","substring","URLSearchParams","mapObject","setMapObject","setShop","zLatLngString","setZLatLngString","addSource","cluster","clusterMaxZoom","clusterRadius","event","addMarkers","q","set","toString","replace","bounds","geojsonExtent","fitBoundsOptions","padding","get","zlatlng","lat","lng","flyTo","fitBounds","onMapLoad","getCenter","rawZoom","getZoom","precision","ceil","LN2","log","LN10","m","pow","zStr","orienteationchangeHandler","resize","addEventListener","removeEventListener","off","navigate","useNavigate","categoryList","setCategoryList","categories","indexOf","htmlFor","onChange","value","options","label","validImageList","setValidImageList","imageListItems","ImageListItem","loading","popupHandler","onError","target","parentNode","ImageList","sx","cols","rowHeight","zen2han","str","s","String","fromCharCode","charCodeAt","table2json","table","header","slice","record","reduce","prev","column","sortShopList","shopList","a","sort","item1","item2","Date","parse","App","setShopList","fetch","process","getTime","then","response","ok","Promise","reject","status","fetchedData","JSON","console","values","nextShopList","match","index","sortedShopList","path","element","Home","Qrcode","Canvas","useQRCode","TwitterShareButton","hashtags","config","title","TwitterIcon","FacebookShareButton","hashtag","FacebookIcon","LineShareButton","LineIcon","logoUrl","logo_image_url","description","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","origin","headers","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.de2ab844.chunk.js","sourcesContent":["type Geometry = {\n  type: string;\n  coordinates: number[]\n}\n\ntype featureProperties = {\n  [key: string]: string;\n}\n\ntype Feature = {\n  type: string;\n  geometry: Geometry;\n  properties: featureProperties\n}\n\ntype itemObject = {\n  [key: string]: any;\n}\n\ntype GeoJSON = {\n  type: string;\n  features: Feature[]\n}\n\nconst toGeoJson = (data: any) => {\n  const geojson = {\n    type: \"FeatureCollection\",\n    features: []\n  } as GeoJSON\n\n  for (const id in data) {\n    const item = data[id] as itemObject\n\n    if (!item['経度'] || !item['緯度'] || !item['スポット名']) {\n      return;\n    }\n\n    const feature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: [Number(item['経度']), Number(item['緯度'])]\n      },\n      properties: {_id: id}\n    } as Feature\n\n    for (let i = 0; i < Object.keys(item).length; i++) {\n      const key = Object.keys(item)[i]\n      feature.properties[key] = item[key]\n    }\n\n    geojson.features.push(feature)\n  }\n\n  return geojson\n}\n\nexport default toGeoJson;\n","const setCluster = (map: any) => {\n  map.addLayer({\n    id: 'clusters',\n    type: 'circle',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'circle-radius': 20,\n      'circle-color': '#FF0000',\n      'circle-opacity': 1.0,\n    },\n  })\n\n  map.addLayer({\n    id: 'cluster-count',\n    type: 'symbol',\n    source: 'shops',\n    filter: ['has', 'point_count'],\n    paint: {\n      'text-color': '#FFFFFF',\n    },\n    layout: {\n      'text-field': '{point_count_abbreviated} 件',\n      'text-size': 12,\n      'text-font': ['Noto Sans Regular'],\n    },\n  })\n\n  map.on('click', 'clusters', (e: any) => {\n    const features = map.queryRenderedFeatures(e.point, { layers: ['clusters'] })\n    const clusterId = features[0].properties.cluster_id\n    map.getSource('shops').getClusterExpansionZoom(clusterId, (err: any, zoom: number) => {\n      if (err)\n        return\n\n      map.easeTo({\n        center: features[0].geometry.coordinates,\n        zoom: zoom,\n      })\n    })\n  })\n\n  map.on('mouseenter', 'clusters', function () {\n    map.getCanvas().style.cursor = 'pointer'\n  })\n\n  map.on('mouseleave', 'clusters', function () {\n    map.getCanvas().style.cursor = ''\n  })\n}\n\nexport default setCluster;\n","import React from \"react\";\nimport { FaTwitter, FaInstagram, FaHome } from 'react-icons/fa';\n\nimport './Links.scss'\n\ntype Props = {\n  data: Pwamap.ShopData;\n};\n\nconst noop = (e: React.MouseEvent) => {\n  e.stopPropagation()\n}\n\nconst Content = (props: Props) => {\n\n  return (\n    <div className=\"links\">\n      {props.data['Instagram']?<div className=\"link\"><a href={`https://instagram.com/${props.data['Instagram']}`}><FaInstagram onClick={noop} size=\"20px\" /></a></div>:''}\n      {props.data['Twitter']?<div className=\"link\"><a href={`https://twitter.com/${props.data['Twitter']}`}><FaTwitter onClick={noop} size=\"20px\" /></a></div>:''}\n      {props.data['公式サイト']?<div className=\"link\"><a href={props.data['公式サイト']}><FaHome onClick={noop} size=\"20px\" /></a></div>:''}\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Links from \"./Links\";\nimport \"./Shop.scss\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { makeDistanceLabelText } from \"./distance-label\";\n\ntype Props = {\n  shop: Pwamap.ShopData;\n  close: Function;\n};\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [map, setMap] = React.useState<any>(null);\n  const { shop } = props;\n\n  const clickHandler = () => {\n    props.close();\n    if (mapNode.current) {\n      mapNode.current.remove();\n      map.remove();\n    }\n  };\n\n  React.useEffect(() => {\n    if (!mapNode.current) {\n      return;\n    }\n\n    // @ts-ignore\n    const nextMap = new window.geolonia.Map({\n      container: mapNode.current,\n      interactive: false,\n      zoom: 14,\n      style: `geolonia/gsi`,\n    });\n    setMap(nextMap);\n  }, [shop, mapNode]);\n\n  const distanceTipText = makeDistanceLabelText(shop.distance);\n  const category = shop[\"カテゴリ\"];\n  const content = shop[\"紹介文\"];\n\n  const toBreakLine = (text: string) => {\n    return text.split(/(\\r\\n)|(\\n)|(\\r)/g).map((line, i) => {\n      let result: any = \"\";\n\n      if (line === \"\\r\\n\" || line === \"\\n\" || line === \"\\r\") {\n        result = <br key={i} />;\n      } else if (line !== undefined) {\n        result = line;\n      }\n\n      return result;\n    });\n  };\n\n  return (\n    <div className=\"shop-single\">\n      <div className=\"head\">\n        <button onClick={clickHandler}>\n          <AiOutlineClose size=\"16px\" color=\"#FFFFFF\" /> 閉じる\n        </button>\n      </div>\n      <div className=\"container\">\n        {shop ? (\n          <>\n            <h2>{shop[\"スポット名\"]}</h2>\n            <p>{shop[\"公式サイト\"]}</p>\n            <div>\n              <span className=\"nowrap\">\n                <Link to={`/list?category=${category}`}>\n                  <span onClick={clickHandler} className=\"category\">\n                    {category}\n                  </span>\n                </Link>\n              </span>\n              <span className=\"nowrap\">\n                {distanceTipText && (\n                  <span className=\"distance\">\n                    現在位置から {distanceTipText}\n                  </span>\n                )}\n              </span>\n            </div>\n\n            <div style={{ margin: \"24px 0\" }}>\n              <Links data={shop} />\n            </div>\n\n            {shop[\"画像\"] && (\n              <img\n                src={shop[\"画像\"]}\n                alt={shop[\"スポット名\"]}\n                style={{ width: \"100%\" }}\n              />\n            )}\n\n            <p style={{ margin: \"24px 0\" }}>{toBreakLine(content)}</p>\n\n            <div\n              ref={mapNode}\n              style={{ width: \"100%\", height: \"200px\", marginTop: \"24px\" }}\n              data-lat={shop[\"緯度\"]}\n              data-lng={shop[\"経度\"]}\n              data-navigation-control=\"off\"\n            ></div>\n\n            <p>\n              <a\n                className=\"small\"\n                href={`http://maps.apple.com/?q=${shop[\"緯度\"]},${shop[\"経度\"]}`}\n              >\n                スポットまでの道順\n              </a>\n            </p>\n          </>\n        ) : (\n          <></>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","export const makeDistanceLabelText = (distance: number | void) => {\n  let distanceTipText = \"\"\n  if(typeof distance === 'number' && !Number.isNaN(distance)) {\n    if(distance > 1000) {\n      distanceTipText = Math.round(distance / 1000) + ' km'\n    } else {\n      distanceTipText = Math.round(distance) + ' m'\n    }\n  }\n  return distanceTipText\n}\n","import React from \"react\";\n// @ts-ignore\nimport geojsonExtent from '@mapbox/geojson-extent'\nimport toGeoJson from './toGeoJson'\nimport setCluster from './setCluster'\nimport Shop from './Shop'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n};\n\nconst CSS: React.CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'relative',\n}\n\nconst hidePoiLayers = (map: any) => {\n\n  const hideLayers = [\n    'poi',\n    'poi-primary',\n    'poi-r0-r9',\n    'poi-r10-r24',\n    'poi-r25',\n    'poi-bus',\n    'poi-entrance',\n  ]\n\n  for (let i = 0; i < hideLayers.length; i++) {\n    const layerId = hideLayers[i];\n    map.setLayoutProperty(layerId, 'visibility', 'none')\n  }\n}\n\nconst parseHash = (url?: Location | URL) => {\n  const qstr = (url || window.location).hash.substring(2);\n  const q = new URLSearchParams(qstr);\n  return q;\n};\n\nconst updateHash = (q: URLSearchParams) => {\n\n  const hash = q.toString();\n  if (hash) {\n    window.location.hash = `#/?${q.toString().replace(/%2F/g, '/')}`;\n  }\n};\n\nconst Content = (props: Props) => {\n  const mapNode = React.useRef<HTMLDivElement>(null);\n  const [mapObject, setMapObject] = React.useState<any>()\n  const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>(undefined)\n  const [ zLatLngString, setZLatLngString ] = React.useState<string>('');\n\n  const addMarkers = (mapObject: any, data: any) => {\n\n    if (!mapObject || !data) {\n      return\n    }\n\n    mapObject.on('render', () => {\n\n      // nothing to do if shops exists.\n      if (mapObject.getSource('shops')) {\n        return\n      }\n\n      hidePoiLayers(mapObject)\n\n      const textColor = '#000000'\n      const textHaloColor = '#FFFFFF'\n\n      const geojson = toGeoJson(data)\n\n      mapObject.addSource('shops', {\n        type: 'geojson',\n        data: geojson,\n        cluster: true,\n        clusterMaxZoom: 14,\n        clusterRadius: 25,\n      })\n\n      mapObject.addLayer({\n        id: 'shop-points',\n        type: 'circle',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'circle-radius': 13,\n          'circle-color': '#FF0000',\n          'circle-opacity': 0.4,\n          'circle-stroke-width': 2,\n          'circle-stroke-color': '#FFFFFF',\n          'circle-stroke-opacity': 1,\n        },\n      })\n\n      mapObject.addLayer({\n        id: 'shop-symbol',\n        type: 'symbol',\n        source: 'shops',\n        filter: ['all',\n          ['==', '$type', 'Point'],\n        ],\n        paint: {\n          'text-color': textColor,\n          'text-halo-color': textHaloColor,\n          'text-halo-width': 2,\n        },\n        layout: {\n          'text-field': \"{スポット名}\",\n          'text-font': ['Noto Sans Regular'],\n          'text-variable-anchor': ['top', 'bottom', 'left', 'right'],\n          'text-radial-offset': 0.5,\n          'text-justify': 'auto',\n          'text-size': 12,\n          'text-anchor': 'top',\n          'text-max-width': 12,\n          'text-allow-overlap': false,\n        },\n      })\n\n      mapObject.on('mouseenter', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-points', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('mouseenter', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = 'pointer'\n      })\n\n      mapObject.on('mouseleave', 'shop-symbol', () => {\n        mapObject.getCanvas().style.cursor = ''\n      })\n\n      mapObject.on('click', 'shop-points', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      mapObject.on('click', 'shop-symbol', (event: any) => {\n        if (!event.features[0].properties.cluster) {\n          setShop(event.features[0].properties)\n        }\n      })\n\n      setCluster(mapObject)\n\n\n    });\n\n  }\n\n  React.useEffect(() => {\n\n    addMarkers(mapObject, props.data)\n\n  }, [mapObject, props.data])\n\n  React.useEffect(() => {\n    const hash = parseHash();\n    if (zLatLngString) {\n      hash.set('map', zLatLngString);\n    }\n    updateHash(hash);\n\n  }, [ zLatLngString ]);\n\n  React.useEffect(() => {\n    // Only once reder the map.\n    if (!mapNode.current || mapObject) {\n      return\n    }\n\n    // @ts-ignore\n    const { geolonia } = window;\n\n    const geojson = toGeoJson(props.data)\n    const bounds = geojsonExtent(geojson)\n\n    const map = new geolonia.Map({\n      container: mapNode.current,\n      style: 'geolonia/gsi',\n      bounds: bounds,\n      fitBoundsOptions: { padding: 50 },\n    });\n\n    const hash = parseHash();\n    if (hash && hash.get('map')) {\n\n      const latLngString = hash.get('map') || '';\n      const zlatlng = latLngString.split('/');\n\n      const zoom = zlatlng[0]\n      const lat = zlatlng[1]\n      const lng = zlatlng[2]\n\n      map.flyTo({center: [lng, lat], zoom});\n\n    } else if (bounds) {\n\n      map.fitBounds(bounds, { padding: 50 })\n\n    }\n\n    const onMapLoad = () => {\n      hidePoiLayers(map)\n      setMapObject(map)\n\n      map.on('moveend', () => {\n        // see: https://github.com/maplibre/maplibre-gl-js/blob/ba7bfbc846910c5ae848aaeebe4bde6833fc9cdc/src/ui/hash.js#L59\n        const center = map.getCenter(),\n          rawZoom = map.getZoom(),\n          zoom = Math.round(rawZoom * 100) / 100,\n          // derived from equation: 512px * 2^z / 360 / 10^d < 0.5px\n          precision = Math.ceil((zoom * Math.LN2 + Math.log(512 / 360 / 0.5)) / Math.LN10),\n          m = Math.pow(10, precision),\n          lng = Math.round(center.lng * m) / m,\n          lat = Math.round(center.lat * m) / m,\n          zStr = Math.ceil(zoom);\n\n        setZLatLngString(`${zStr}/${lat}/${lng}`);\n      });\n    }\n\n    const orienteationchangeHandler = () => {\n      map.resize()\n    }\n\n    // attach\n    map.on('load', onMapLoad)\n\n    window.addEventListener('orientationchange', orienteationchangeHandler)\n\n    return () => {\n      // detach to prevent memory leak\n      window.removeEventListener('orientationchange', orienteationchangeHandler)\n      map.off('load', onMapLoad)\n    }\n  }, [mapNode, mapObject, props.data])\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  return (\n    <div style={CSS}>\n      <div\n        ref={mapNode}\n        style={CSS}\n        data-geolocate-control=\"on\"\n        data-marker=\"off\"\n        data-gesture-handling=\"off\"\n      ></div>\n      {shop ?\n        <Shop shop={shop} close={closeHandler} />\n        :\n        <></>\n      }\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Map from \"./Map\"\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n  return (\n    <><Map data={props.data} /></>\n  );\n};\n\nexport default Content;\n","// import ShopListItem from './ShopListItem'\n// import Shop from './Shop'\n// import { useSearchParams } from \"react-router-dom\";\n// import InfiniteScroll from 'react-infinite-scroll-component';\n// import { askGeolocationPermission } from '../geolocation'\n// import * as turf from \"@turf/turf\"\n\nimport React from \"react\";\nimport \"./List.scss\";\n\n// type Props = {\n//   data: Pwamap.ShopData[];\n// }\n\n// const sortShopList = async (shopList: Pwamap.ShopData[]) => {\n//   const currentPosition = await askGeolocationPermission()\n//   if(currentPosition) {\n//     const from = turf.point(currentPosition);\n//     const sortingShopList = shopList.map((shop) => {\n//       const lng = parseFloat(shop['経度'])\n//       const lat = parseFloat(shop['緯度'])\n//       if(Number.isNaN(lng) || Number.isNaN(lat)) {\n//         return shop\n//       } else {\n//         const to = turf.point([lng, lat])\n//         const distance = turf.distance(from, to, {units: 'meters' as 'meters'});\n//         return { ...shop, distance }\n//       }\n//     })\n//     sortingShopList.sort((a,b) => {\n//       if(typeof a.distance !== 'number' || Number.isNaN(a.distance)) {\n//         return 1\n//       } else if (typeof b.distance !== 'number' || Number.isNaN(b.distance)) {\n//         return -1\n//       } else {\n//         return a.distance - b.distance\n//       }\n//     })\n//     return sortingShopList\n//   } else {\n//     return shopList\n//   }\n// }\n\n// const Content = (props: Props) => {\n\n//   const [shop, setShop] = React.useState<Pwamap.ShopData | undefined>()\n//   const [data, setData] = React.useState<Pwamap.ShopData[]>(props.data)\n//   const [list, setList] = React.useState<any[]>([]);\n//   const [page, setPage] = React.useState(10);\n//   const [hasMore, setHasMore] = React.useState(true);\n\n//   const [searchParams] = useSearchParams();\n//   const queryCategory = searchParams.get('category')\n\n//   React.useEffect(() => {\n\n//     let data = props.data;\n\n//     if (queryCategory) {\n//       data = props.data.filter((shop) => {\n//         return shop['カテゴリ'] === queryCategory\n//       })\n//     }\n\n//     let isMounted = true\n//     // prevent memory leak\n//     if (isMounted) {\n\n//       const orderBy = process.env.REACT_APP_ORDERBY\n\n//       if (orderBy === 'distance') {\n\n//         sortShopList(data)\n//           .then(sortedData => {\n//             // prevent memory leak\n//             if (isMounted) {\n//               setList(sortedData.slice(0, page))\n//               setData(sortedData)\n//             }\n//           })\n\n//       } else {\n//         setList(data.slice(0, page))\n//         setData(data)\n//       }\n//     }\n\n//     return () => {\n//       isMounted = false\n//     }\n//   }, [props.data, queryCategory, page])\n\n//   const popupHandler = (shop: Pwamap.ShopData) => {\n//     if (shop) {\n//       setShop(shop)\n//     }\n//   }\n\n//   const closeHandler = () => {\n//     setShop(undefined)\n//   }\n\n//     //項目を読み込むときのコールバック\n//     const loadMore = () => {\n\n//       //データ件数が0件の場合、処理終了\n//       if (list.length >= data.length) {\n//         setHasMore(false);\n//         return;\n//       }\n\n//       setList([...list, ...data.slice(page, page + 10)])\n//       setPage(page + 10)\n//     }\n\n//   const loader = <div\n//     className=\"loader\"\n//     key={0}\n//     style={{\n//       width: '100%',\n//       height: '200px',\n//       textAlign: 'center',\n//       position: 'relative',\n//       top: '100px'\n//     }}\n//   >場所一覧を読み込み中です...</div>;\n\n//   return (\n//     <div id=\"shop-list\" className=\"shop-list\">\n//       {queryCategory && <div className=\"shop-list-category\">{`カテゴリ：「${queryCategory}」`}</div>}\n\n//       <InfiniteScroll\n//         dataLength={list.length}\n//         next={loadMore}\n//         hasMore={hasMore}\n//         loader={loader}\n//         scrollableTarget=\"shop-list\"\n//       >\n//         {\n//           list.map((item, index) => {\n\n//             return (<div key={index} className=\"shop\">\n//               <ShopListItem\n//                 data={item}\n//                 popupHandler={popupHandler}\n//                 queryCategory={queryCategory}\n//               />\n//             </div>)\n\n//           })\n//         }\n//       </InfiniteScroll>\n//       {shop ?\n//         <Shop shop={shop} close={closeHandler} />\n//         :\n//         <></>\n//       }\n//     </div>\n//   );\n// };\n\nconst Content = () => {\n  return (\n    <div>\n      <h1>投稿募集中</h1>\n      <p>好きな画像やみんなにお知らせしたい情報をにゃんでも投稿してください</p>\n      <div className=\"btn-radius-gradient-wrap\">\n        <a\n          href=\"https://forms.gle/i8J6xN8cu3TZhgik8\"\n          className=\"btn btn-radius-gradient\"\n        >\n          投稿する！\n        </a>\n      </div>\n      <p>修正はこちら</p>\n      <div className=\"btn-radius-gradient-wrap\">\n        <a\n          href=\"https://forms.gle/i8J6xN8cu3TZhgik8\"\n          className=\"btn btn-radius-gradient\"\n        >\n          修正する！\n        </a>\n      </div>\n      <img\n        src=\"https://managitmana.github.io/catmap/posttop.jpg\"\n        alt=\"投稿お願い画像\"\n      />\n    </div>\n  );\n};\n\nexport default Content;\n","import \"./AboutUs.scss\";\n// import config from \"../config.json\";\n// import { FaPlus } from \"react-icons/fa\";\n\nconst Content = () => {\n  // const clickHandler = () => {\n  //   if (config.form_url) {\n  //     window.location.href = config.form_url\n  //   }\n  // }\n\n  // return (\n  //   <div className=\"about-us\">\n  //     <div className=\"container\">\n  //       <div className=\"branding\">\n  //         <div className=\"image\"><img src={`${process.env.PUBLIC_URL}/icon-pwamap.svg`} alt=\"\"/></div>\n  //         <div className=\"logo\">Geolonia PWAマップ</div>\n  //       </div>\n\n  //       <p>Geolonia PWAマップは、Google スプレッドシートを更新するだけでオリジナルの地図アプリを作成することができます。</p>\n  //       <p>プログラムはオープンソースで公開しているため、自由にカスタマイズしてご利用いただけます。</p>\n\n  //       <h2> Geolonia PWAマップについて</h2>\n  //       <p><a href=\"https://blog.geolonia.com/2022/05/17/pwamap-beta.html\" target='_blank' rel=\"noreferrer\">https://blog.geolonia.com/2022/05/17/pwamap-beta.html</a></p>\n\n  //       <p>また、独自ドメインでの利用やデザインのカスタマイズや利用に必要な緯度・経度情報の提供も有償で別途承ります。ご希望の方は下記までお問い合わせください。</p>\n\n  //       <h2>お問い合わせフォーム</h2>\n  //       <p><a href=\"https://geolonia.com/contact/\" target='_blank' rel=\"noreferrer\">https://geolonia.com/contact/</a></p>\n  //       <p>※カスタマイズおよびアプリの作成・利用についてはサポート対象外となります。あらかじめご了承ください。</p>\n\n  //       {config.form_url?\n  //         <>\n  //           <h2>データの更新について</h2>\n  //           <p>このアプリのデータを更新するには下の「 + 」ボタンを押してフォームに必要な情報を入力してください。</p>\n  //           <div className=\"goto-form\"><button><FaPlus color=\"#FFFFFF\" onClick={clickHandler} /></button></div>\n  //         </>\n  //         :\n  //         <></>\n  //       }\n  //     </div>\n  //   </div>\n  // );\n  return (\n    <div className=\"about-us\">\n      <div className=\"container\">\n        <div className=\"branding\">\n          <h1>にゃっぷについて</h1>\n          <p>にゃっぷは猫についてにゃんでも投稿できるマッピングアプリです</p>\n          <p>可愛い猫の写真や猫のいる風景を自由に投稿してください</p>\n          <p>里親募集や捨て猫の情報も投稿できます</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Select from 'react-select'\nimport { useNavigate } from 'react-router-dom';\nimport './Category.scss'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n\n  const navigate = useNavigate();\n\n  const [categoryList, setCategoryList] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n\n    let categories: string[] = []\n\n    for (let i = 0; i < props.data.length; i++) {\n      const shop = props.data[i];\n\n      if (categories.indexOf(shop['カテゴリ']) === -1) {\n\n        categories.push(shop['カテゴリ'])\n      }\n\n    }\n\n    setCategoryList(categories)\n\n  }, [props.data])\n\n\n  return (\n    <>\n      <div className=\"head\"></div>\n      <div className=\"category\">\n        <div className=\"container\">\n          <div className=\"category-item\">\n            <label htmlFor=\"category-select\">カテゴリから選ぶ</label>\n            <Select\n              onChange={(e) => {\n                if (e) {\n                  navigate(`/list?category=${e.value}`);\n                }\n              }}\n              options={\n                categoryList.map(category => {\n                  return {\n                    value: category,\n                    label: category\n                  }\n                })\n              }\n            />\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import { useEffect, useState } from 'react'\nimport { ImageList, ImageListItem } from '@material-ui/core'\nimport Shop from './Shop'\nimport './Images.scss'\n\ntype Props = {\n  data: Pwamap.ShopData[];\n}\n\nconst Content = (props: Props) => {\n\n  const { data } = props;\n  const [validImageList, setValidImageList ] = useState<JSX.Element[]>([]);\n  const [shop, setShop] = useState<Pwamap.ShopData | undefined>()\n\n  const popupHandler = (shop: Pwamap.ShopData) => {\n    if (shop) {\n      setShop(shop)\n    }\n  }\n\n  const closeHandler = () => {\n    setShop(undefined)\n  }\n\n  useEffect(() => {\n\n    let imageListItems = []\n\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n\n      if (item['画像']) {\n\n        imageListItems.push(\n          <ImageListItem\n            key={i}\n            className=\"mui-image-list-item\"\n          >\n            <img\n              src={item['画像']}\n              alt={item['スポット名']}\n              loading=\"lazy\"\n              onClick={() => popupHandler(item)}\n              onError={e => {\n                //@ts-ignore\n                e.target.parentNode.remove()\n              }}\n            />\n          </ImageListItem>\n        )\n      }\n    }\n\n    setValidImageList(imageListItems)\n\n  }, [data])\n\n  return (\n    <>\n      <div className=\"head\"></div>\n      <div className=\"images\">\n        <div className=\"container\">\n          <ImageList id=\"mui-image-list\" sx={{ width: \"100%\", height: \"100%\" }} cols={2} rowHeight={164}>\n            {validImageList}\n          </ImageList>\n          {shop ?\n            <Shop shop={shop} close={closeHandler} />\n            :\n            <></>\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Tabbar.scss'\n\nimport { FaList, FaHome, FaSearch, FaCamera } from \"react-icons/fa\"\nimport { AiOutlineAppstore } from \"react-icons/ai\"\n\nconst Content = () => {\n  return (\n    <div className=\"tabbar\">\n      <ul>\n        <li>\n          <Link to=\"/\">\n            <div className=\"icon\">\n              <FaHome />\n            </div>\n            <div className=\"text\">ホーム</div>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/category\">\n            <div className=\"icon\">\n              <FaSearch />\n            </div>\n            <div className=\"text\">カテゴリ</div>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/list\">\n            <div className=\"icon\">\n              <FaList />\n            </div>\n            <div className=\"text\">投稿</div>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/images\">\n            <div className=\"icon\">\n              <FaCamera />\n            </div>\n            <div className=\"text\">写真から探す</div>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/about\">\n            <div className=\"icon\">\n              <AiOutlineAppstore />\n            </div>\n            <div className=\"text\">マップについて</div>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","const zen2han = (str: string) => {\n  return str.replace(/[！-～]/g, function (s: string) {\n    return String.fromCharCode(s.charCodeAt(0) - 0xFEE0);\n  }).replace(/　/g, ' ');\n}\n\nexport default zen2han;\n","import zen2han from \"./zen2han\";\n\nconst table2json = (table: Array<Array<string>>) => {\n  const header = table[0]\n  const records = table.slice(1)\n\n  return records.map((record: Array<string>) => {\n\n    const properties = header.reduce((prev: any, column: any) => {\n      const value = record[header.indexOf(column)];\n      prev[column] = zen2han(value || '');\n      return prev;\n    }, {});\n    return properties;\n  });\n\n}\n\nexport default table2json;\n","import React from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\n\nimport Home from './App/Home'\nimport List from './App/List'\nimport AboutUs from './App/AboutUs'\nimport Category from './App/Category'\nimport Images from './App/Images'\n\nimport Tabbar from './App/Tabbar'\nimport table2json from \"./lib/table2json\";\n\n// You can see config.json after running `npm start` or `npm run build`\n// import config from './config.json'\n\n\nconst sortShopList = async (shopList: Pwamap.ShopData[]) => {\n\n  // 新着順にソート\n  return shopList.sort(function (item1, item2) {\n    return Date.parse(item2['タイムスタンプ']) - Date.parse(item1['タイムスタンプ'])\n  });\n\n}\n\nconst App = () => {\n  const [shopList, setShopList] = React.useState<Pwamap.ShopData[]>([])\n\n  React.useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/data.json?timestamp=${new Date().getTime()}`)\n      .then((response) => {\n        return response.ok ? response.text() : Promise.reject(response.status);\n      })\n      .then((fetchedData) => {\n\n        const data = JSON.parse(fetchedData)\n\n        if ('values' in data === false) {\n          console.log(\"No Data Found at Spreadsheet\")\n          setShopList([])\n          return\n        }\n\n        let features = table2json(data.values);\n\n        const nextShopList: Pwamap.ShopData[] = []\n        for (let i = 0; i < features.length; i++) {\n          const feature = features[i] as Pwamap.ShopData\n\n          if (!feature['緯度'] || !feature['経度'] || !feature['スポット名']) {\n            continue;\n          }\n          if (!feature['緯度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n          if (!feature['経度'].match(/^-?[0-9]+(\\.[0-9]+)?$/)) {\n            continue\n          }\n\n          const shop = {\n            ...feature,\n            index: i\n          }\n\n          nextShopList.push(shop)\n        }\n\n        sortShopList(nextShopList).then((sortedShopList) => {\n          setShopList(sortedShopList)\n        })\n\n      });\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-body\">\n        <Routes>\n          <Route path=\"/\" element={<Home data={shopList} />} />\n          {/* <Route path=\"/list\" element={<List data={shopList} />} /> */}\n          <Route path=\"/list\" element={<List />} />\n          <Route path=\"/category\" element={<Category data={shopList} />} />\n          <Route path=\"/images\" element={<Images data={shopList} />} />\n          <Route path=\"/about\" element={<AboutUs />} />\n        </Routes>\n      </div>\n      <div className=\"app-footer\">\n        <Tabbar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useQRCode } from 'next-qrcode';\n\nfunction Qrcode(props: { url: string }) {\n\n  const { url } = props;\n  const { Canvas } = useQRCode();\n\n  return (\n    <Canvas\n      text={url}\n      options={{\n        type: 'image/png',\n        margin: 0,\n        width: 128\n      }}\n    />\n  );\n}\n\nexport default Qrcode;\n","import React from \"react\";\nimport { FacebookShareButton, LineShareButton, TwitterShareButton } from \"react-share\";\nimport { FacebookIcon, LineIcon, TwitterIcon } from \"react-share\";\nimport config from '../config.json'\n\nimport './Share.scss'\n\nconst Content = () => {\n  const url = window.location.href.replace(/\\?.+$/, '').replace(/#.+$/, '')\n\n  return (\n    <div className=\"share\">\n      <ul>\n        <li><a href=\"/\"><TwitterShareButton url={url} hashtags={[`${config.title}`]} title={`${config.title}`}><TwitterIcon size={32} round={true} /></TwitterShareButton></a></li>\n        <li><a href=\"/\"><FacebookShareButton url={url} hashtag={`#${config.title}`}><FacebookIcon size={32} round={true} /></FacebookShareButton></a></li>\n        <li><a href=\"/\"><LineShareButton url={url} title={`${config.title}`}><LineIcon size={32} round={true} /></LineShareButton></a></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport './About.scss'\nimport Qrcode from './Qrcode'\nimport Share from './App/Share'\nimport config from './config.json'\n\nconst Content = () => {\n\n  const logoUrl = config.logo_image_url || `${process.env.PUBLIC_URL}/logo.svg`\n\n  return (\n    <div className=\"about\">\n      <div className=\"branding\">\n        <img className=\"image\" src={logoUrl} alt=\"\"/>\n      </div>\n\n      <div className=\"description\">{config.description}</div>\n      <div className=\"qrcode\"><Qrcode url={window.location.href}/></div>\n      <Share />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\n\nimport App from './App'\nimport About from './About'\nimport './Container.scss'\n\nfunction Content() {\n  return (\n    <div className=\"outer-container\">\n      <div className=\"inner-container\">\n        <About />\n        <App />\n      </div>\n    </div>\n  );\n}\n\nexport default Content;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport Container from './Container';\nimport './index.scss'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Container />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}